"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/component";
exports.ids = ["pages/api/component"];
exports.modules = {

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(api)/./pages/api/component.ts":
/*!********************************!*\
  !*** ./pages/api/component.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\n//added various methods to handle various functionalities\nfunction handler(req, res) {\n    if (req.method === \"GET\") {\n        const content = JSON.parse((0,fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync)(`${process.cwd()}/database.json`, \"utf8\"));\n        res.status(200).json(content);\n    } else if (req.method === \"POST\") {\n        //POST method adds new components\n        //body should be stringified array with previous components and the new one\n        (0,fs__WEBPACK_IMPORTED_MODULE_0__.writeFileSync)(`${process.cwd()}/database.json`, req.body, \"utf8\");\n        res.status(200).json({\n            \"message\": \"added\"\n        });\n    } else if (req.method === \"PUT\") {\n        //PUT method is used to update a specific component i.e. change src or text\n        //parse the body to get the ID of the component to update\n        const body = JSON.parse(req.body);\n        //get the current list from the DB file and parse it\n        const content1 = JSON.parse((0,fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync)(`${process.cwd()}/database.json`, \"utf8\"));\n        //find the component to update's object in content array\n        let toChange = content1?.find((c)=>c.id === body?.id);\n        //we will need to other components to spread when we overwrite the DB file\n        let others = content1?.filter((c)=>c.id !== body?.id);\n        //create a new array with the other components, and the changing component with the updates spread into it\n        let updatedArray = [\n            ...others,\n            {\n                ...toChange,\n                ...body\n            }\n        ];\n        //need to sort updated array to prevent order changing\n        let sortedArray = updatedArray?.sort((a, b)=>a.id - b.id);\n        //overwrite the DB file with array created above\n        (0,fs__WEBPACK_IMPORTED_MODULE_0__.writeFileSync)(`${process.cwd()}/database.json`, JSON.stringify(sortedArray), \"utf8\");\n        //return the updated array, which we use update the local state\n        res.status(200).json(updatedArray);\n    //querying and overwriting the entire DB is obviously poor architecture in production, SQL provides vastly superior methods, but this works for our exercise\n    } else if (req.method === \"DELETE\") {\n        //DELETE method removes a component from the DB\n        //parse the body to get the ID of the component to delete\n        const body1 = JSON.parse(req.body);\n        //get the current list from the DB file and parse it\n        const content2 = JSON.parse((0,fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync)(`${process.cwd()}/database.json`, \"utf8\"));\n        //filter out deleted component, creating array of remaining components\n        const remaining = content2?.filter((c)=>c?.id !== body1.id);\n        //because we set ID of new components as length of components list, a bug it introduced when components are deleted that can result in comps with the same ID.\n        //mapping over the remaining components and resetting the IDs to index + 1 will prevent this specific issue, but likely introduce others bugs i.e. where components are queried elsewhere based on the previous value of their ID.\n        //A better solution would be to use a randomly assigned ID.\n        const formatted = remaining?.map((c, idx)=>({\n                ...c,\n                id: idx + 1\n            }));\n        //overwrite the DB file with array created above\n        (0,fs__WEBPACK_IMPORTED_MODULE_0__.writeFileSync)(`${process.cwd()}/database.json`, JSON.stringify(formatted), \"utf8\");\n        //return the updated array, which we use update the local state\n        res.status(200).json(formatted);\n    } else {\n        res.status(404).json({\n            message: \"Not found\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/component.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/component.ts"));
module.exports = __webpack_exports__;

})();